{"generator":"Code Snippets v2.10.2","date_created":"2018-08-30 07:57","snippets":[{"name":"HTML, Inline CSS & Inline JavaScript Minify","tags":["html","css","javascript","pagespeed"],"scope":"front-end","code":"class WP_HTML_Compression {\r\n    protected $compress_css = true;\r\n    protected $compress_js = false;\r\n    protected $info_comment = true;\r\n    protected $remove_comments = true;\r\n \r\n    protected $html;\r\n    public function __construct($html) {\r\n      if (!empty($html)) {\r\n\t\t    $this->parseHTML($html);\r\n\t    }\r\n    }\r\n    public function __toString() {\r\n\t    return $this->html;\r\n    }\r\n    protected function bottomComment($raw, $compressed) {\r\n\t    $raw = strlen($raw);\r\n\t    $compressed = strlen($compressed);\t\t\r\n\t    $savings = ($raw-$compressed) \/ $raw * 100;\t\t\r\n\t    $savings = round($savings, 2);\t\t\r\n\t    return '<!-- HTML Minify | Gr\u00f6\u00dfe reduziert um '.$savings.'% | Von '.$raw.' Bytes, auf '.$compressed.' Bytes -->';\r\n    }\r\n    protected function minifyHTML($html) {\r\n\t    $pattern = '\/<(?<script>script).*?<\\\/script\\s*>|<(?<style>style).*?<\\\/style\\s*>|<!(?<comment>--).*?-->|<(?<tag>[\\\/\\w.:-]*)(?:\".*?\"|\\'.*?\\'|[^\\'\">]+)*>|(?<text>((<[^!\\\/\\w.:-])?[^<]*)+)|\/si';\r\n\t    preg_match_all($pattern, $html, $matches, PREG_SET_ORDER);\r\n\t    $overriding = false;\r\n\t    $raw_tag = false;\r\n\t    $html = '';\r\n\t    foreach ($matches as $token) {\r\n\t\t    $tag = (isset($token['tag'])) ? strtolower($token['tag']) : null;\r\n\t\t    $content = $token[0];\r\n\t\t    if (is_null($tag)) {\r\n\t\t\t    if ( !empty($token['script']) ) {\r\n\t\t\t\t    $strip = $this->compress_js;\r\n\t\t\t    }\r\n\t\t\t    else if ( !empty($token['style']) ) {\r\n\t\t\t\t    $strip = $this->compress_css;\r\n\t\t\t    }\r\n\t\t\t    else if ($content == '<!--wp-html-compression no compression-->') {\r\n\t\t\t\t    $overriding = !$overriding;\r\n\t\t\t\t    continue;\r\n\t\t\t    }\r\n\t\t\t    else if ($this->remove_comments) {\r\n\t\t\t\t    if (!$overriding && $raw_tag != 'textarea') {\r\n\t\t\t\t\t    $content = preg_replace('\/<!--(?!\\s*(?:\\[if [^\\]]+]|<!|>))(?:(?!-->).)*-->\/s', '', $content);\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\t\t    }\r\n\t\t    else {\r\n\t\t\t    if ($tag == 'pre' || $tag == 'textarea') {\r\n\t\t\t\t    $raw_tag = $tag;\r\n\t\t\t    }\r\n\t\t\t    else if ($tag == '\/pre' || $tag == '\/textarea') {\r\n\t\t\t\t    $raw_tag = false;\r\n\t\t\t    }\r\n\t\t\t    else {\r\n\t\t\t\t    if ($raw_tag || $overriding) {\r\n\t\t\t\t\t    $strip = false;\r\n\t\t\t\t    }\r\n\t\t\t\t    else {\r\n\t\t\t\t\t    $strip = true;\r\n\t\t\t\t\t    $content = preg_replace('\/(\\s+)(\\w++(?<!\\baction|\\balt|\\bcontent|\\bsrc)=\"\")\/', '$1', $content);\r\n\t\t\t\t\t    $content = str_replace(' \/>', '\/>', $content);\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\t\t    }\r\n\t\t    if ($strip) {\r\n\t\t\t    $content = $this->removeWhiteSpace($content);\r\n\t\t    }\r\n\t\t    $html .= $content;\r\n\t    }\r\n\t    return $html;\r\n    }\r\n    public function parseHTML($html) {\r\n\t    $this->html = $this->minifyHTML($html);\r\n\t    if ($this->info_comment) {\r\n\t\t    $this->html .= \"\\n\" . $this->bottomComment($html, $this->html);\r\n\t    }\r\n    }\r\n    protected function removeWhiteSpace($str) {\r\n\t    $str = str_replace(\"\\t\", ' ', $str);\r\n\t    $str = str_replace(\"\\n\",  '', $str);\r\n\t    $str = str_replace(\"\\r\",  '', $str);\r\n\t    while (stristr($str, '  ')) {\r\n\t\t    $str = str_replace('  ', ' ', $str);\r\n\t    }\r\n\t    return $str;\r\n    }\r\n}\r\nfunction wp_html_compression_finish($html) {\r\n    return new WP_HTML_Compression($html);\r\n}\r\nfunction wp_html_compression_start() {\r\n    ob_start('wp_html_compression_finish');\r\n}\r\nadd_action('get_header', 'wp_html_compression_start');"}]}